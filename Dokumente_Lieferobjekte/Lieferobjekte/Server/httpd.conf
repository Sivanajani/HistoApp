ServerRoot "/usr/local/apache2"
ServerName v000564.fhnw.ch

# Lausche auf HTTP & HTTPS
Listen 80
Listen 443

# Module laden
LoadModule http2_module modules/mod_http2.so
LoadModule mpm_event_module modules/mod_mpm_event.so
LoadModule authn_file_module modules/mod_authn_file.so
LoadModule authn_core_module modules/mod_authn_core.so
LoadModule authz_host_module modules/mod_authz_host.so
LoadModule authz_groupfile_module modules/mod_authz_groupfile.so
LoadModule authz_user_module modules/mod_authz_user.so
LoadModule authz_core_module modules/mod_authz_core.so
LoadModule access_compat_module modules/mod_access_compat.so
LoadModule auth_basic_module modules/mod_auth_basic.so
LoadModule reqtimeout_module modules/mod_reqtimeout.so
LoadModule filter_module modules/mod_filter.so
LoadModule mime_module modules/mod_mime.so
LoadModule log_config_module modules/mod_log_config.so
LoadModule env_module modules/mod_env.so
LoadModule headers_module modules/mod_headers.so
LoadModule setenvif_module modules/mod_setenvif.so
LoadModule version_module modules/mod_version.so
LoadModule proxy_module modules/mod_proxy.so
LoadModule proxy_http_module modules/mod_proxy_http.so
LoadModule ssl_module modules/mod_ssl.so
LoadModule unixd_module modules/mod_unixd.so
LoadModule status_module modules/mod_status.so
LoadModule autoindex_module modules/mod_autoindex.so
LoadModule dir_module modules/mod_dir.so
LoadModule alias_module modules/mod_alias.so
LoadModule rewrite_module modules/mod_rewrite.so

LoadModule cache_module modules/mod_cache.so
<IfModule mod_cache.c>
    LoadModule cache_disk_module modules/mod_cache_disk.so
    <IfModule mod_cache_disk.c>
        CacheRoot "c:/cacheroot"
        CacheEnable disk  "/"
        CacheDirLevels 5
        CacheDirLength 3
    </IfModule>
    CacheDisable "http://security.update.server/update-list/"
</IfModule>

# HTTP → HTTPS Redirect
<VirtualHost *:80>
    ServerName v000564.fhnw.ch

    Alias /.well-known/acme-challenge/ "/var/www/certbot/.well-known/acme-challenge/"
    <Directory "/usr/local/apache2/htdocs/.well-known/acme-challenge/">
        AllowOverride None
        Require all granted
    </Directory>

    RewriteEngine On
    RewriteCond %{REQUEST_URI} !^/.well-known/acme-challenge/
    RewriteRule ^(.*)$ https://%{HTTP_HOST}$1 [R=301,L]
</VirtualHost>

# HTTPS Konfiguration
<VirtualHost *:443>
    ServerName v000564.fhnw.ch

    SSLEngine on
    SSLCertificateFile /etc/letsencrypt/live/v000564.fhnw.ch/fullchain.pem
    SSLCertificateKeyFile /etc/letsencrypt/live/v000564.fhnw.ch/privkey.pem

    Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains"
    ProxyPreserveHost On
    Protocols h2 h2c http/1.1

    CacheRoot "/var/cache/apache/"
    CacheEnable disk "/orthanc/instances/"
    CacheDirLevels 2
    CacheDirLength 1

    # Rewrite für /orthanc → /orthanc/
    RewriteEngine On
    RewriteCond %{REQUEST_URI} ^/orthanc$
    RewriteRule ^/orthanc$ /orthanc/ [R=301,L]

    # API Backend (Spring Boot)
    ProxyPass /api/ http://server-api:8080/
    ProxyPassReverse /api/ http://server-api:8080/

    # Orthanc PACS
    ProxyPass /orthanc/ http://orthanc:8042/
    ProxyPassReverse /orthanc/ http://orthanc:8042/

    <Location "/orthanc/">
        Require all granted
        RequestHeader set Authorization "Basic b3J0aGFuYzpvcnRoYW5j"
        Header unset Cache-Control
        Header unset Pragma
        Header set Cache-Control "public, max-age=31536000"
    </Location>

    # Vorschaubilder speziell cachen (PNG über Orthanc)
    <LocationMatch "^/orthanc/instances/.+/preview$">
        Header set Cache-Control "public, max-age=31536000"
    </LocationMatch>

   # Grafana Dashboard – Subpath-Handling
    ProxyPass /grafana http://grafana:3000/grafana nocanon
    ProxyPassReverse /grafana http://grafana:3000/grafana

    <Location "/grafana">
        ProxyPreserveHost On
        RequestHeader set X-Forwarded-Prefix "/grafana"
        Require all granted
    </Location>

    # Prometheus Monitoring
    ProxyPass /prometheus/ http://prometheus:9090/prometheus/
    ProxyPassReverse /prometheus/ http://prometheus:9090/prometheus/
    <Location "/prometheus/">
        Require all granted
    </Location>

    # Node Exporter (Systemmetriken)
    ProxyPass /node/ http://node_exporter:9100/
    ProxyPassReverse /node/ http://node_exporter:9100/
    <Location "/node/">
        Require all granted
    </Location>

    # cAdvisor für Docker
    ProxyPass /cadvisor/ http://cadvisor:8098/
    ProxyPassReverse /cadvisor/ http://cadvisor:8098/

    <Location "/cadvisor/">
        Require all granted
        RedirectMatch ^/cadvisor/?$ /cadvisor/metrics
    </Location>

    <Location /adminer>
        ProxyPass http://localhost:8081/
        ProxyPassReverse http://localhost:8081/
    </Location>

    # React Frontend
    ProxyPass / http://my-histo-app:3100/
    ProxyPassReverse / http://my-histo-app:3100/

    # Standardlogfile
    ErrorLog /usr/local/apache2/logs/error.log
    CustomLog /usr/local/apache2/logs/access.log combined
</VirtualHost>